{
	"version": 3,
	"sources": [
		"services/constants.js",
		"components/auth/ProvideAuth.js",
		"components/MessageComponent.js",
		"pages/SignUp.js",
		"services/listItems.js",
		"pages/Dashboard.js",
		"pages/SignIn.js",
		"components/auth/PrivateRoute.js",
		"services/authServices.js",
		"services/validationFunctions.js",
		"services/clubServices.js",
		"components/club/ClubCard.js",
		"pages/ClubGrid.js",
		"pages/ClubForm.js",
		"components/club/ClubInfo.js",
		"services/userServices.js",
		"components/user/UserList.js",
		"services/eventServices.js",
		"components/event/EventCard.js",
		"components/event/EventList.js",
		"pages/ClubData.js",
		"services/resourceServices.js",
		"pages/EventForm.js",
		"components/event/EventInfo.js",
		"components/event/RatingComponent.js",
		"components/event/FeedbackCard.js",
		"components/event/EventFeedbackList.js",
		"pages/EventData.js",
		"components/event/EventGrid.js",
		"pages/UserEvents.js",
		"App.js",
		"reportWebVitals.js",
		"index.js"
	],
	"names": [
		"DB_URL",
		"SIGNUP_URL",
		"SIGNIN_URL",
		"VERIFY_TOKEN",
		"CLUB_LIST_URL",
		"NEW_CLUB_URL",
		"CLUB_ENROLL_URL",
		"CLUB_LEAVE_URL",
		"USER_LIST_URL",
		"NEW_EVENT_URL",
		"EVENT_LIST_URL",
		"EVENT_REGISTER_URL",
		"GET_RESOURCE_URL",
		"NEW_FEEDBACK",
		"labels",
		"AuthContext",
		"createContext",
		"ProvideAuth",
		"children",
		"useState",
		"authState",
		"setAuthState",
		"loading",
		"setLoading",
		"user",
		"setUser",
		"getAuthentication",
		"token",
		"window",
		"localStorage",
		"getItem",
		"userObj",
		"JSON",
		"parse",
		"fetch",
		"response",
		"status",
		"useEffect",
		"Provider",
		"value",
		"authenticated",
		"useStyles",
		"makeStyles",
		"theme",
		"root",
		"width",
		"marginTop",
		"spacing",
		"MessageComponent",
		"props",
		"classes",
		"messageContent",
		"setMessagePopupState",
		"React",
		"open",
		"setOpen",
		"className",
		"Snackbar",
		"anchorOrigin",
		"vertical",
		"horizontal",
		"autoHideDuration",
		"onClose",
		"event",
		"reason",
		"message",
		"Copyright",
		"Typography",
		"variant",
		"color",
		"align",
		"Date",
		"getFullYear",
		"paper",
		"backgroundColor",
		"border",
		"padding",
		"boxShadow",
		"borderRadius",
		"display",
		"flexDirection",
		"alignItems",
		"avatar",
		"margin",
		"form",
		"submit",
		"SignIn",
		"history",
		"useHistory",
		"contextValue",
		"useContext",
		"email",
		"password",
		"credentialState",
		"setCredentialState",
		"messagePopupState",
		"setMessage",
		"formChangeHandler",
		"fieldName",
		"target",
		"name",
		"fieldValue",
		"formSubmitHandler",
		"preventDefault",
		"apiParams",
		"method",
		"headers",
		"body",
		"stringify",
		"ok",
		"console",
		"log",
		"text",
		"json",
		"setTimeout",
		"push",
		"Fragment",
		"Container",
		"component",
		"maxWidth",
		"CssBaseline",
		"Avatar",
		"noValidate",
		"TextField",
		"required",
		"fullWidth",
		"id",
		"label",
		"autoComplete",
		"autoFocus",
		"onChange",
		"type",
		"Button",
		"onClick",
		"Grid",
		"container",
		"item",
		"to",
		"Box",
		"mt",
		"MainListItems",
		"ListItem",
		"button",
		"Link",
		"ListItemIcon",
		"ListItemText",
		"primary",
		"role",
		"secondaryListItems",
		"toolbar",
		"paddingRight",
		"toolbarIcon",
		"justifyContent",
		"mixins",
		"appBar",
		"zIndex",
		"drawer",
		"transition",
		"transitions",
		"create",
		"easing",
		"sharp",
		"duration",
		"leavingScreen",
		"appBarShift",
		"marginLeft",
		"enteringScreen",
		"menuButton",
		"marginRight",
		"menuButtonHidden",
		"title",
		"flexGrow",
		"drawerPaper",
		"position",
		"whiteSpace",
		"drawerPaperClose",
		"overflowX",
		"breakpoints",
		"up",
		"appBarSpacer",
		"content",
		"height",
		"overflow",
		"paddingTop",
		"paddingBottom",
		"fixedHeight",
		"Dashboard",
		"Component",
		"CircularProgress",
		"AppBar",
		"clsx",
		"Toolbar",
		"IconButton",
		"edge",
		"noWrap",
		"removeItem",
		"Drawer",
		"Divider",
		"List",
		"palette",
		"secondary",
		"main",
		"resp",
		"setItem",
		"PrivateRoute",
		"rest",
		"render",
		"location",
		"pathname",
		"state",
		"from",
		"getToken",
		"isEmpty",
		"str",
		"length",
		"isBlank",
		"test",
		"fetchClubList",
		"data",
		"saveClub",
		"club",
		"fetchClubDetails",
		"clubId",
		"url",
		"enrollMemberInClub",
		"userId",
		"removeMemberFromClub",
		"validateClubObject",
		"desc",
		"memberCapacity",
		"clubType",
		"errors",
		"media",
		"cursor",
		"go_to",
		"red",
		"ClubCard",
		"_id",
		"redirectToClubsData",
		"mediaImage",
		"Card",
		"CardHeader",
		"CardMedia",
		"image",
		"CardContent",
		"style",
		"textAlign",
		"CardActions",
		"disableSpacing",
		"size",
		"createStyles",
		"control",
		"grid_card",
		"ClubGrid",
		"clubList",
		"setClubList",
		"styles",
		"getClublist",
		"justify",
		"map",
		"xs",
		"md",
		"minWidth",
		"layout",
		"buttons",
		"formControl",
		"ClubForm",
		"members",
		"otheClubType",
		"events",
		"clubState",
		"setClubState",
		"isUpdate",
		"setIsUpdate",
		"useParams",
		"getClubDetails",
		"undefined",
		"otherClubType",
		"finalClubType",
		"redirectToDashboard",
		"FormControl",
		"InputLabel",
		"Select",
		"labelId",
		"MenuItem",
		"otherCategory",
		"sm",
		"bullet",
		"transform",
		"fontSize",
		"pos",
		"marginBottom",
		"ClubInfo",
		"fetchUserList",
		"ids",
		"background",
		"inline",
		"listItem",
		"questionFieldStyling",
		"UserList",
		"userList",
		"setUserList",
		"getUser",
		"success",
		"titleText",
		"ListItemAvatar",
		"emptyText",
		"saveEvent",
		"formData",
		"FormData",
		"Headers",
		"append",
		"eventPoster",
		"capacity",
		"venue",
		"fetchEventList",
		"fetchEventDetails",
		"registerUser",
		"eventId",
		"validateEventObject",
		"getTime",
		"getEventStatus",
		"startDate",
		"endDate",
		"currentTime",
		"startTime",
		"endTime",
		"sendUserFeedback",
		"feedback",
		"getUserFeedbackForEvent",
		"getFeedbacksForEvent",
		"validateFeedbackObject",
		"comments",
		"card",
		"cardDetails",
		"flex",
		"cardMedia",
		"cardAction",
		"chip_start",
		"chip_end",
		"FeaturedPost",
		"statusText",
		"statusClass",
		"startDateString",
		"getDate",
		"getMonth",
		"getHours",
		"getMinutes",
		"toDate",
		"toDateString",
		"paragraph",
		"Chip",
		"Hidden",
		"xsDown",
		"EventList",
		"eventList",
		"setEventList",
		"getData",
		"buttonGroup",
		"enrollButton",
		"editButton",
		"orgEventButton",
		"ClubData",
		"alert",
		"enrollHandler",
		"leaveClubHandler",
		"clubButtonObj",
		"includes",
		"handler",
		"startIcon",
		"fetchResource",
		"textField",
		"input",
		"EventForm",
		"participants",
		"eventState",
		"setEventState",
		"setImage",
		"getEventDetails",
		"publicFiles",
		"resourceResponse",
		"path",
		"redirectToClub",
		"src",
		"alt",
		"split",
		"InputLabelProps",
		"shrink",
		"accept",
		"URL",
		"createObjectURL",
		"files",
		"htmlFor",
		"EventInfo",
		"borderColor",
		"addHeight",
		"buttonStyling",
		"ratingStyling",
		"textFieldStyling",
		"ratingWidth",
		"RatingComponent",
		"hover",
		"setHover",
		"isFeedbackGiven",
		"setIsFeedbackGiven",
		"feedbackState",
		"setFeedbackState",
		"getUserFeedback",
		"stars",
		"submitUserFeedback",
		"Rating",
		"precision",
		"newValue",
		"onChangeActive",
		"newHover",
		"disabled",
		"ml",
		"multiline",
		"rows",
		"ratingValue",
		"FeedbackCard",
		"EventFeedbackList",
		"feedbackList",
		"setFeedbackList",
		"getFeedbacks",
		"rateEventButton",
		"viewFeedbackButton",
		"memberSection",
		"EventData",
		"imagePath",
		"setImagePath",
		"eventStatusState",
		"setEventStatusState",
		"ratingComponentState",
		"setRatingComponentState",
		"feedbackComponentState",
		"setFeedbackComponentState",
		"registerUserToEvent",
		"EventGrid",
		"redirectToEventData",
		"UserEvents",
		"registeredEvents",
		"App",
		"basename",
		"exact",
		"SignUp",
		"reportWebVitals",
		"onPerfEntry",
		"Function",
		"then",
		"getCLS",
		"getFID",
		"getFCP",
		"getLCP",
		"getTTFB",
		"ReactDOM",
		"StrictMode",
		"document",
		"getElementById"
	],
	"mappings": "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",
	"file": "static/js/main.e4b1010c.chunk.js",
	"sourcesContent": [
		"export const DB_URL = 'https://unified-vercel.vercel.app/';\nexport const SIGNUP_URL = DB_URL + '/auth/signup';\nexport const SIGNIN_URL = DB_URL + '/auth/signin';\nexport const VERIFY_TOKEN = DB_URL + '/auth/verifyToken';\n\nexport const CLUB_LIST_URL = DB_URL + '/clubs';\nexport const NEW_CLUB_URL = DB_URL + '/club';\nexport const CLUB_ENROLL_URL = DB_URL + '/club/enroll';\nexport const CLUB_LEAVE_URL = DB_URL + '/club/leave';\n\nexport const USER_LIST_URL = DB_URL + '/user/userList';\n\nexport const NEW_EVENT_URL = DB_URL + '/event';\nexport const EVENT_LIST_URL = DB_URL + '/events/list';\nexport const EVENT_REGISTER_URL = DB_URL + '/event/register';\n\nexport const GET_RESOURCE_URL = DB_URL + '/resource';\n\nexport const NEW_FEEDBACK = DB_URL + '/event/feedback';\n\nexport const labels = {\n\t0.5: 'Useless',\n\t1: 'Useless+',\n\t1.5: 'Poor',\n\t2: 'Poor+',\n\t2.5: 'Ok',\n\t3: 'Ok+',\n\t3.5: 'Good',\n\t4: 'Good+',\n\t4.5: 'Excellent',\n\t5: 'Excellent+',\n};\n\nexport const imageUrl = [\n\t{\n\t\tcategory: 'Work',\n\t\timgUrl: 'https://www.freepik.com/blog/app/uploads/2017/10/svg-previa.jpg',\n\t},\n\t{\n\t\tcategory: 'Fun',\n\t\timgUrl:\n\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMvw26w2i8FfL7_Kr4tZ3CqBOXHLVovHyJDQ&usqp=CAU',\n\t},\n\t{\n\t\tcategory: 'Sports',\n\t\timgUrl:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Sport_balls.svg/1200px-Sport_balls.svg.png',\n\t},\n\t{\n\t\tcategory: 'Music',\n\t\timgUrl:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Musical_notes.svg/1280px-Musical_notes.svg.png',\n\t},\n\t{\n\t\tcategory: 'SelfImprov',\n\t\timgUrl:\n\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjZfVulolQIcCtP-m2OpHUW90cHenKKY8byg&usqp=CAU',\n\t},\n\t{\n\t\tcategory: 'Other',\n\t\timgUrl:\n\t\t\t'https://firebasestorage.googleapis.com/v0/b/myspace-ec3c9.appspot.com/o/64c35da8ce05400291f6eaf561d1acea.png?alt=media&token=b517a4e5-06e2-49f7-a224-801cfac3c6a7',\n\t},\n\t{\n\t\tcategory: 'Love',\n\t\timgUrl:\n\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2-HdyIn2FRLRBmtL9O2EYw4-2Fz4cHVYG6g&usqp=CAU',\n\t},\n];\n",
		"import React, { useState, useEffect, createContext } from \"react\";\nimport { VERIFY_TOKEN } from \"../../services/constants\";\n\nexport const AuthContext =  createContext();\n\n\nconst ProvideAuth = ({ children }) => {\n  const [authState, setAuthState] = useState(null);\n  const [loading, setLoading]=useState(true);\n  const [user, setUser] = useState(null);\n\n  const getAuthentication = async () => {\n    const token = window.localStorage.getItem('token');\n    const userObj = window.localStorage.getItem('user');\n    const user = JSON.parse(userObj);\n    if(token){\n      setLoading(true);\n      const response = await fetch(`${VERIFY_TOKEN}/${token}`);\n      setAuthState(response.status === 200); \n      setUser(user);\n      setLoading(false);\n    }\n    else{\n      setAuthState(false);\n    }\n  }\n  useEffect(()=>{\n    getAuthentication();\n  },[]);\n  \n  return (\n    <AuthContext.Provider value={{authenticated: authState, loading, setAuthState, user, setUser}}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default ProvideAuth;\n",
		"import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst MessageComponent = props => {\n  const classes = useStyles();\n  const { messageContent, setMessagePopupState } = props;\n\n  const [open, setOpen] = React.useState(props.open);\n\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n    setMessagePopupState(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message={messageContent}\n      />\n    </div>\n  );\n}\n\n\nexport default MessageComponent;",
		"import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { SIGNUP_URL } from '../services/constants';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport MessageComponent from '../components/MessageComponent';\n\nfunction Copyright() {\n\treturn (\n\t\t<Typography variant='body2' color='textSecondary' align='center'>\n\t\t\t{'Copyright © '}\n\t\t\t{/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '} */}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tbackgroundColor: '#fff',\n\t\tborder: '1px solid #ddd',\n\t\tpadding: '20px',\n\t\tboxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n\t\tborderRadius: '10px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: 'black',\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t\tbackgroundColor: 'black',\n\t\t'&:hover': { backgroundColor: 'darkgreen' },\n\t},\n}));\n\nexport default function SignIn() {\n\tconst history = useHistory();\n\tconst contextValue = useContext(AuthContext);\n\tconst { setAuthState, setUser } = contextValue;\n\tconst classes = useStyles();\n\tconst [credentialState, setCredentialState] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\tconst [messagePopupState, setMessagePopupState] = useState(false);\n\tconst [message, setMessage] = useState('');\n\n\tconst formChangeHandler = (event) => {\n\t\tconst fieldName = event.target.name;\n\t\tconst fieldValue = event.target.value;\n\t\tsetCredentialState({ ...credentialState, [fieldName]: fieldValue });\n\t};\n\n\tconst formSubmitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst apiParams = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(credentialState),\n\t\t};\n\t\tconst response = await fetch(SIGNUP_URL, apiParams);\n\t\tif (!response.ok) {\n\t\t\tconsole.log('Response Status', response.status);\n\t\t\tconsole.log('Response Text', await response.text());\n\t\t\tsetMessage('Unable to log you in');\n\t\t\tsetMessagePopupState(true);\n\t\t} else {\n\t\t\tconst resp = await response.json();\n\t\t\t// window.localStorage.setItem('token', resp.token);\n\n\t\t\t//Need to figure out a solution, not sure if its good idea to store the user in local storage\n\t\t\t// window.localStorage.setItem('user', JSON.stringify(resp.user));\n\t\t\t// setAuthState(true);\n\t\t\t// setUser(resp.user);\n\t\t\tsetTimeout(() => {\n\t\t\t\thistory.push('/signin');\n\t\t\t}, 500);\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{messagePopupState && (\n\t\t\t\t<MessageComponent\n\t\t\t\t\topen={messagePopupState}\n\t\t\t\t\tmessageContent={message}\n\t\t\t\t\tsetMessagePopupState={setMessagePopupState}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Container component='main' maxWidth='xs'>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonChange={formChangeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonChange={formChangeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t\tonChange={formChangeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname='contact'\n\t\t\t\t\t\t\tlabel='contact'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tid='contact'\n\t\t\t\t\t\t\tonChange={formChangeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={formSubmitHandler}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Link to={'/signin'} variant='body2'>\n\t\t\t\t\t\t\t\t\t{'Already have an account? Sign In'}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<Box mt={8}>\n\t\t\t\t\t<Copyright />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n",
		"import React, { useContext } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupSharpIcon from '@material-ui/icons/GroupSharp';\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../components/auth/ProvideAuth';\n\n\nexport const MainListItems = props => {\n  const context = useContext(AuthContext);\n  const { user } = context;\n\n  return (\n    <div>\n      <ListItem button component={Link} to={\"/clubs\"}>\n        <ListItemIcon>\n          <GroupSharpIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Clubs\" />\n      </ListItem>\n      {user.role === 'admin' && (\n      <ListItem button component={Link} to={\"/club/form/new\"}>\n        <ListItemIcon>\n          <AddCircleOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"New Club\" />\n      </ListItem>)}\n      {user.role === 'participant' && (\n        <ListItem button component={Link} to={\"/user/events\"}>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"My Events\" />\n        </ListItem>\n      )}\n\n      {/* <ListItem button>\n      <ListItemIcon>\n        <AccountCircleOutlinedIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"News\" />\n    </ListItem> */}\n    </div>\n  )\n};\n\nexport const secondaryListItems = (\n  <div>\n    {/* <ListSubheader inset>Saved Items</ListSubheader> */}\n    {/* <ListItem button component={Link} to={\"/users/clubs\"}>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"My Clubs\" />\n    </ListItem> */}\n    {/* <ListItem button component={Link} to={\"/user/events\"}>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"My Events\" />\n    </ListItem> */}\n  </div>\n);",
		"import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { MainListItems, secondaryListItems } from '../services/listItems';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgress } from '@material-ui/core';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: '10px',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: 'black',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 0,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: '#eee',\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: '#fff',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    // backgroundColor:'#303030'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard(props) {\n  const history = useHistory();\n  const contextValue = useContext(AuthContext);\n  const { setAuthState, setUser, user, loading } = contextValue;\n  const { component: Component } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const logout = () => {\n    setAuthState(false);\n    setUser(null);\n    window.localStorage.removeItem('user');\n    window.localStorage.removeItem('token');\n    history.push('/signin');\n  }\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <React.Fragment>\n          <div className={classes.root}>\n            {/* <CssBaseline /> */}\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>\n                  Unified Club Portal\n                </Typography>\n\n                <IconButton color=\"inherit\">\n                  <PersonIcon />\n                  <Typography component=\"h6\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Hello, {user.name}!\n                  </Typography>\n\n                </IconButton>\n                <IconButton color=\"inherit\" onClick={logout}>\n                  <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Logout\n                  </Typography>\n                </IconButton>\n\n              </Toolbar>\n            </AppBar>\n            <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <List>{<MainListItems/>}</List>\n              <Divider />\n              <List>{secondaryListItems}</List>\n            </Drawer>\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container maxWidth=\"lg\" className={classes.container}>\n                <Component></Component>\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n\n    </React.Fragment>\n  );\n}",
		"import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { SIGNIN_URL } from '../services/constants';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport MessageComponent from '../components/MessageComponent';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    backgroundColor: '#eff',\n    border: '1px solid #ddd',\n    padding: '20px',\n    boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n    borderRadius: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const history = useHistory();\n  const contextValue = useContext(AuthContext);\n  const { setAuthState, setUser } = contextValue;\n  const classes = useStyles();\n  const [credentialState, setCredentialState] = useState({\n    email: '',\n    password: ''\n  });\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage ] = useState('');\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setCredentialState({...credentialState, [fieldName]: fieldValue});\n  }\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n    const apiParams = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentialState)\n    }\n    const response = await fetch(SIGNIN_URL, apiParams);\n    if(!response.ok){\n      console.log('Response Status', response.status);\n      console.log('Response Text', await response.text());\n      setMessage('Unable to log you in')\n      setMessagePopupState(true);\n    }\n    else{\n      const resp = await response.json();\n      window.localStorage.setItem('token', resp.token);\n\n      //Need to figure out a solution, not sure if its good idea to store the user in local storage\n      window.localStorage.setItem('user', JSON.stringify(resp.user));\n      setAuthState(true);\n      setUser(resp.user);\n      setTimeout(()=>{\n        history.push('/clubs');\n      }, 500);\n    }\n  } \n\n\n  return (\n    <React.Fragment>\n    {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={formChangeHandler}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={formChangeHandler}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={formSubmitHandler}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to={'/signup'} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n    </React.Fragment>\n  );\n}\n",
		"import { useContext } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport { AuthContext } from './ProvideAuth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const contextValue = useContext(AuthContext);\n  return (\n    <div>\n\n    {contextValue.authenticated == null && contextValue.loading ? <CircularProgress/> : (<Route\n        {...rest}\n        render={({ location }) =>\n          contextValue.authenticated ? (\n            <Component></Component>\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />)}\n    </div>\n  );\n}\n\nexport default PrivateRoute;\n",
		"export const getToken = () => {\n  return  window.localStorage.getItem('token');\n}",
		"export const validateEmail = email => {\n  return !!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email));\n};\n\nexport const validateContact = contact => {\n  return contact.length === 10;\n};\n\nexport const isEmpty = str => {\n  return (!str || str.length === 0 );\n};\n\nexport const isBlank = str => {\n  return (!str || /^\\s*$/.test(str));\n};",
		"import { getToken } from \"./authServices\";\nimport { CLUB_LIST_URL, NEW_CLUB_URL, CLUB_ENROLL_URL, CLUB_LEAVE_URL } from \"./constants\"\nimport { isEmpty, isBlank } from \"./validationFunctions\";\n\nexport const fetchClubList = async () => {\n\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': `${token}`\n    },\n  }\n  const response = await fetch(CLUB_LIST_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const saveClub = async club => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'authorization': `${token}`,\n    },\n    body: JSON.stringify(club)\n  }\n  const response = await fetch(NEW_CLUB_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n} \n\nexport const fetchClubDetails = async (clubId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  };\n  const url = `${NEW_CLUB_URL}/${clubId}`;\n  const response = await  fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const enrollMemberInClub = async (userId, clubId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({userId, clubId})\n  };\n\n  const response = await fetch(CLUB_ENROLL_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const removeMemberFromClub = async (userId, clubId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({userId, clubId})\n  };\n  const response = await fetch(CLUB_LEAVE_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const validateClubObject = club => {\n  const {name, desc, memberCapacity, clubType} = club;\n  const errors = [];\n  if(isEmpty(name) || isBlank(name)){\n    errors.push('Name cannot be blank');\n  } \n  if(isEmpty(desc) || isBlank(desc)){\n    errors.push('Description cannot be blank');\n  } \n  if(memberCapacity <= 10){\n    errors.push('Member Capacity must be greater than 10');\n  } \n  if(isEmpty(clubType) || isBlank(clubType)){\n    errors.push('Club Type cannot be blank');\n  } \n  return errors; \n\n}",
		"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { useHistory } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"10px\",\n    borderRadius: \"16px\",\n    transition: \"0.3s\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n    \"&:hover\": {\n      cursor: \"pointer\"\n    },\n  },\n  go_to: {\n    marginLeft: \"auto\",\n    border: \"1px solid darkgrey\",\n    color: \"darkblue\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n    marginRight: \"0\",\n  },\n  title: {\n    display: \"flex\",\n  }\n}));\n\nconst ClubCard = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { name, desc, _id, clubType } = props.club;\n\n  const redirectToClubsData = () => {\n    setTimeout(() => {\n      history.push(`/club/${_id}`);\n    }, 500);\n  };\n\n  let mediaImage = '';\n  switch(clubType){\n    case 'Music':\n        mediaImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Musical_notes.svg/1280px-Musical_notes.svg.png';\n        break;\n    case 'Sports':\n      mediaImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Sport_balls.svg/1200px-Sport_balls.svg.png';\n      break;\n    case 'SelfImprov':\n      mediaImage = '\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjZfVulolQIcCtP-m2OpHUW90cHenKKY8byg&usqp=CAU';\n      break;\n    case 'Fun':\n      mediaImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMvw26w2i8FfL7_Kr4tZ3CqBOXHLVovHyJDQ&usqp=CAU';\n      break;\n    default: \n      mediaImage = 'https://thumbs.dreamstime.com/z/neon-sign-word-club-dark-background-background-your-design-greeting-card-banner-neon-sign-word-club-dark-150811899.jpg';\n      break; \n  }\n\n  \n  \n  return (\n    <Box className={classes.root}>\n      <Card>\n        <CardHeader\n          classes={{ title: classes.title}}\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {name[0]}\n            </Avatar>\n          }\n          title={name}\n        />\n        <CardMedia\n          className={classes.media}\n          image={mediaImage}\n          title=\"Club\"\n          onClick={redirectToClubsData}\n        />\n\n        <CardContent style={{ textAlign: \"left\" }}>\n          <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n            {desc}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            aria-label=\"go to club\"\n            className={classes.go_to}\n            color=\"secondary\"\n            size=\"medium\"\n            onClick={redirectToClubsData}\n          >\n            <ArrowForwardIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default ClubCard;\n",
		"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { fetchClubList } from \"../services/clubServices\";\nimport ClubCard from '../components/club/ClubCard';\nimport MessageComponent from \"../components/MessageComponent\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    grid_card: {\n      padding: '10px'\n    }\n  }),\n);\n\nexport default function ClubGrid() {\n  const [clubList, setClubList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n\n\n  const styles = useStyles();\n\n\n  useEffect(() => {\n    async function getClublist() {\n      const response = await fetchClubList();\n      if (response.status === 200) {\n        setClubList(response.data.data);\n        setLoading(false);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n        setLoading(false);\n      }\n    }\n    getClublist();\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <>\n          {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState} />}\n          <div>\n            <Grid\n              key=\"outerGrid\"\n              className={styles.root}\n              container justify=\"center\"\n            >\n              {clubList.map((club) => {\n                return (\n                  <Grid key={`innerGrid-${club['_id']}`} item xs={12} md={3}>\n                    <div className={styles.grid_card}\n                      key={club.id}\n                    >\n                      <ClubCard club={club} />\n                    </div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\n\n\n\n\n",
		"import React, { useEffect, useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport {\n  CircularProgress,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport { isBlank, isEmpty } from '../services/validationFunctions';\nimport { saveClub, validateClubObject, fetchClubDetails } from '../services/clubServices';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MessageComponent from '../components/MessageComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  root: {\n    minWidth: 275,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 120,\n  },\n}));\n\n\n\nconst ClubForm = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [clubState, setClubState] = useState({\n    name: '',\n    desc: '',\n    memberCapacity: null,\n    clubType: '',\n    members: [],\n    otheClubType: '',\n    events: []\n  })\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const { id } = useParams();\n\n\n  useEffect(() => {\n    const getClubDetails = async () => {\n      setLoading(true);\n      const response = await fetchClubDetails(id);\n      if (response.status === 200) {\n        setClubState(response.data.data);\n        setLoading(false);\n      }\n      else if (response.status === 412) {\n        setMessage(response.data.message);\n        setMessagePopupState(true);\n      }\n      else if(response.status === 500){\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    };\n    if (id !== 'new' && id !== null && id !== undefined && id !== '') {\n      getClubDetails(id);\n      setIsUpdate(true);\n    }\n    else {\n      setLoading(false);\n    } // eslint-disable-next-line\n  }, []);\n\n\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setClubState({ ...clubState, [fieldName]: fieldValue });\n  }\n\n  const formSubmitHandler = async event => {\n    const { name, desc, memberCapacity, clubType, members, otherClubType } = clubState;\n    let finalClubType;\n    if ((isBlank(clubType) || isEmpty(clubType)) && otherClubType !== '') {\n      finalClubType = otherClubType;\n    }\n    else {\n      finalClubType = clubType;\n    }\n    const club = {\n      name,\n      desc,\n      memberCapacity,\n      clubType: finalClubType,\n      members\n    };\n    const errors = validateClubObject(club);\n    if (errors.length === 0) {\n      if(isUpdate){\n        club['_id'] = id;\n      }\n      const response = await saveClub(club);\n      if (response.status === 201) {\n        console.log('Club Creation successfull');\n        setMessage('Club Creation Successfull');\n        setMessagePopupState(true);\n        redirectToDashboard();\n      }\n      else if(response.status === 500) {\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    }\n    else {\n      console.log(errors[0]);\n      setMessage(errors[0]);\n      setMessagePopupState(true);\n    }\n\n  }\n  const redirectToDashboard = () => {\n    setTimeout(() => {\n      history.push('/clubs');\n    }, 500);\n  }\n\n  const redirectToClub = () => {\n    setTimeout(() => {\n      history.push(`/club/${clubState['_id']}`);\n    }, 500);\n  }\n\n  const { name, desc, memberCapacity, clubType } = clubState;\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <div >\n          {messagePopupState && (<MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>)}\n        <main className={classes.layout}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"primary\">\n                {`${isUpdate ? 'Update': 'New'} Club`} \n              </Typography>\n              <Grid container spacing={3}>\n                <Grid item xs={12} >\n                  <TextField\n                    required\n                    value={name}\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Club Name\"\n                    fullWidth\n                    autoComplete=\"given-name\"\n                    onChange={formChangeHandler}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    value={desc}\n                    id=\"desc\"\n                    name=\"desc\"\n                    label=\"Description\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={formChangeHandler}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    value={memberCapacity}\n                    id=\"capacity\"\n                    name=\"memberCapacity\"\n                    label=\"Member Capacity\"\n                    fullWidth\n                    autoComplete=\"shipping address-line2\"\n                    onChange={formChangeHandler}\n                  />\n                </Grid>\n                <Grid item xs={12} >\n                  <FormControl className={classes.formControl} fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={clubType}\n                      onChange={formChangeHandler}\n                      name=\"clubType\"\n                      className={classes.formControl}\n                    >\n                      <MenuItem value={\"Work\"}>Work</MenuItem>\n                      <MenuItem value={\"Fun\"}>Fun</MenuItem>\n                      <MenuItem value={\"Sports\"}>Sports</MenuItem>\n                      <MenuItem value={\"Music\"}>Music</MenuItem>\n                      <MenuItem value={\"Love\"}>Love</MenuItem>\n                      <MenuItem value={\"SelfImprov\"}>Self Improvment</MenuItem>\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\n                    </Select>\n                    {clubState.otherClubType === \"Other\" ? (\n                      <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        fullWidth\n                        value={clubState.otherCategory}\n                        name=\"otherClubType\"\n                        label=\"Catogory\"\n                        id=\"other cateogry\"\n                        required\n                      />\n                    ) : null}\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </CardContent>\n            <CardActions>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"contained\"\n                  onClick={isUpdate ? redirectToClub : redirectToDashboard}\n                >\n                  Back to {`${isUpdate ? 'Club' : 'Dashboard'}`}\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={formSubmitHandler}>\n                  Create\n                </Button>\n              </Grid>\n            </CardActions>\n\n          </Card>\n        </main>\n        </div>\n      )\n        }\n    </React.Fragment>\n  );\n}\n\n\nexport default ClubForm;\n\n",
		"import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    boxShadow:\n      \"rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst ClubInfo = props => {\n  const classes = useStyles();\n  const { club } = props;\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography component=\"h3\" variant=\"h4\" color=\"primary\" key=\"name\">\n            {club.name}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            component=\"p\"\n            key=\"desc\"\n            color=\"secondary\"\n            className={classes.pos}\n          >\n            {club.desc}\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            style={{ color: \"darkslategrey\" }}\n            key=\"memberCapacity\"\n          >\n            Capacity : {club.memberCapacity}\n          </Typography>\n          <Typography variant=\"h6\" style={{ color: \"darkslategrey\" }}>\n            <i>Enrolled</i> <b>{club.members.length}</b>\n          </Typography>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default ClubInfo;\n",
		"import { getToken } from \"./authServices\"\nimport { USER_LIST_URL } from './constants';\n\nexport const fetchUserList = async ids => {\n  const token = getToken();\n  const apiParams = { \n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({ids})\n  };\n  const response = await fetch(USER_LIST_URL, apiParams);\n  const resp = await response.json();\n  return resp;\n}",
		"import React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchUserList } from '../../services/userServices';\nimport { red } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { CircularProgress } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    margin: '10px',\n    borderRadius: '10px',\n    padding: '10px',\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\n    display: 'inline-flex',\n    alignItems: 'center'\n  },\n  inline: {\n    display: 'inline',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  listItem: {\n    boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset'\n  },\n  questionFieldStyling: {\n    margin: '0 0 20px 0',\n    color: '#009688',\n  },\n}));\n\n\nconst UserList = props => {\n  const classes = useStyles();\n  const { ids } = props;\n  const [userList, setUserList] = useState(); //Array of user Objects\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getUser = async () => {\n      setLoading(true);\n      const response = await fetchUserList(ids || []);\n      if (response.success === true) {\n        setUserList(response.data);\n        setLoading(false);\n      }\n      else {\n        console.log('Error', response.errors);\n      }\n    };\n    getUser();\n  }, [ids]);\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <Card className ={classes.listItem}>\n          <CardHeader\n            title={props.titleText}\n          />\n          {userList.length > 0 ? (\n            <List>\n            {userList.map(user => {\n              return (\n                  <ListItem className={classes.root} alignItems=\"flex-start\" key={user['_id']}>\n                    <ListItemAvatar>\n                      <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                        {user.name[0]}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={user.name}\n                    />\n                  </ListItem>\n                );\n            })}\n          </List>\n          ): (\n            <div className={classes.questionFieldStyling}>\n                <Typography component=\"h5\" variant=\"h5\" key=\"name\">\n                  {props.emptyText}\n                </Typography>\n              </div>\n          )}\n          \n        </Card>)}\n    </React.Fragment>\n  );\n}\n\nexport default UserList;\n",
		"import { getToken } from \"./authServices\"\nimport { EVENT_LIST_URL, NEW_EVENT_URL, EVENT_REGISTER_URL, NEW_FEEDBACK } from './constants';\nimport { isBlank, isEmpty } from \"./validationFunctions\";\n\n// export const createNewEvent = async event => {\n//   const token = getToken();\n//   const apiParams = {\n//     method: 'POST',\n//     headers: {\n//       'content-type': 'application/json',\n//       'authorization': `${token}`\n//     },\n//     body: JSON.stringify(event)\n//   };\n//   const response = await fetch(NEW_EVENT_URL, apiParams);\n//   const resp = await response.json();\n//   return resp;\n// }\n\nexport const saveEvent = async event => {\n  const token = getToken();\n  const formData = new FormData();\n  const headers = new Headers();\n  headers.append('authorization', `${token}`);\n  const { name, desc, from, to, eventPoster, capacity, clubId, venue } = event;\n  formData.append('file', eventPoster);\n  formData.append('name', name);\n  formData.append('clubId', clubId);\n  formData.append('desc', desc)\n  formData.append('from', from)\n  formData.append('to', to);\n  formData.append('capacity', capacity);\n  formData.append('venue', venue);\n  if (event['_id']) {\n    formData.append('_id', event['_id']);\n  }\n  const apiParams = {\n    method: 'POST',\n    headers,\n    body: formData\n  };\n  const response = await fetch(NEW_EVENT_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const fetchEventList = async ids => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({ ids })\n  };\n  const response = await fetch(EVENT_LIST_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const fetchEventDetails = async id => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  };\n  const url = `${NEW_EVENT_URL}/${id}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const registerUser = async (userId, eventId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({ userId, eventId })\n  }\n  const response = await fetch(EVENT_REGISTER_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const validateEventObject = event => {\n  const { name, desc, capacity, from, to, venue } = event;\n  const errors = [];\n  if (isBlank(name) || isEmpty(name)) {\n    errors.push('Name Cannot be Blank');\n  }\n  if (isBlank(desc) || isEmpty(desc)) {\n    errors.push('Description Cannot be Blank');\n  }\n  if (isBlank(venue) || isEmpty(venue)) {\n    errors.push('Venue Cannot be Blank');\n  }\n  if (capacity <= 1) {\n    errors.push('Capacity must be greater than 1');\n  }\n  if (!to || !from) {\n    errors.push('Field Cannot be empty');\n  }\n  else {\n    const toTimeStamp = new Date(to).getTime();\n    const fromTimeStamp = new Date(from).getTime();\n    if (toTimeStamp < fromTimeStamp) {\n      errors.push('Date must be after start date');\n    }\n  }\n  return errors;\n}\n\n\nexport const getEventStatus = (startDate, endDate) => {\n  const currentTime = new Date().getTime();\n  const startTime = new Date(startDate).getTime();\n  const endTime = new Date(endDate).getTime();\n  if (currentTime + 7200000 >= startTime && currentTime + 7200000 < endTime) {\n    return 0;\n  }\n  // UPCOMING EVENT\n  else if (currentTime + 7200000 < startTime) {\n    return -1;\n  }\n  // ENDED EVENT\n  else if (currentTime > endTime) {\n    return 2;\n  }\n  // IN PROGRESS\n  else if (currentTime > startTime && currentTime < endTime) {\n    return 1;\n  }\n}\n\nexport const sendUserFeedback = async feedback => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify(feedback)\n  }\n  const response = await fetch(NEW_FEEDBACK, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  };\n}\n\n\nexport const getUserFeedbackForEvent = async(userId, eventId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n  }\n  const url = `${NEW_FEEDBACK}/${userId}/${eventId}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  };\n}\n\nexport const getFeedbacksForEvent = async eventId => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  }\n  const url = `${NEW_FEEDBACK}/${eventId}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const validateFeedbackObject = feedback => {\n  const { comments } = feedback;\n  const errors = [];\n  if(comments.length>200){\n    errors.push('Please keep comments under 200 words...');\n  }\n  return errors;\n}",
		"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { getEventStatus } from \"../../services/eventServices\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n    border: \"1px solid #ddd\",\n    margin: \"10px 5px\",\n    boxShadow: \"none\",\n  },\n  cardDetails: {\n    flex: 1,\n    display: \"flex\",\n    textAlign: \"left\",\n    justifyContent: \"flex-start\",\n  },\n  cardMedia: {\n    width: 250,\n  },\n  cardAction: {\n    \"&hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  chip_start: {\n    backgroundColor: \"green\",\n    marginBottom: \"10px\",\n  },\n  chip_end: {\n    backgroundColor: \"red\",\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function FeaturedPost(props) {\n  const classes = useStyles();\n  const { event } = props;\n  const { name, desc, capacity, from, to } = event;\n  const status = getEventStatus(from, to);\n  var statusText = \"UPCOMING\",\n    statusClass = status === 2 ? classes.chip_end : classes.chip_start;\n\n  if (status === 1) statusText = \"ON-GOING\";\n  else if (status === 2) statusText = \"ENDED\";\n  const startDate = new Date(from);\n  const startDateString = `${startDate.getDate()}/${startDate.getMonth()}/${startDate.getFullYear()} ${startDate.getHours()}:${startDate.getMinutes()}`;\n\n  const toDate = new Date(to);\n  const toDateString = `${toDate.getDate()}/${toDate.getMonth()}/${toDate.getFullYear()} ${toDate.getHours()}:${toDate.getMinutes()} `;\n\n  return (\n    <Grid item>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {startDateString} to {toDateString}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              {desc}\n              <br />\n              Capacity: {capacity}\n            </Typography>\n            <Chip\n              color=\"secondary\"\n              size=\"small\"\n              label={statusText}\n              className={statusClass}\n            />\n          </CardContent>\n        </div>\n        <Hidden xsDown>\n          <CardMedia\n            className={classes.cardMedia}\n            image=\"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/zoom-background%2C-event%2Cpresentation-design-template-69f11bda0c4d7c9ccb155035a05493d9_screen.jpg?ts=1598358685\"\n            title={name}\n          />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n}\n\nFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n",
		"import React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchEventList } from '../../services/eventServices';\nimport { red } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport EventCard from './EventCard';\nimport { useHistory } from 'react-router';\nimport MessageComponent from '../MessageComponent';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset'\n  },\n  root: {\n    margin: 'auto',\n  },\n  inline: {\n    display: 'inline',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  questionFieldStyling: {\n    margin: '0 0 20px 0',\n    color: '#009688',\n  },\n}));\n\n\nconst EventList = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { ids } = props;\n  const [eventList, setEventList] = useState(); //Array of user Objects\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const response = await fetchEventList(ids || []);\n      if (response.status === 200) {\n        setEventList(response.data.data);\n        setLoading(false);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors[0]);\n        setMessage('Internal Server Error');\n        setMessage(true);\n      }\n    };\n    getData();\n  }, [ids]);\n\n  const redirectToEventData = id => {\n    history.push(`/event/${id}`)\n  }\n\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <div>\n          {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState} />}\n          <Card className={classes.card}>\n            <CardHeader\n              title='Events'\n            />\n            {eventList.length > 0 ? (\n              <List className={classes.root}>\n                {eventList.map(event => {\n                  return (\n\n                    <ListItem alignItems=\"flex-start\" key={event['_id']}>\n                      <Button\n                        onClick={() => { redirectToEventData(event['_id']) }}\n                      >\n                        <EventCard event={event} />\n                      </Button>\n                    </ListItem>);\n                })}\n              </List>\n            ) : (\n              <div className={classes.questionFieldStyling}>\n                <Typography component=\"h5\" variant=\"h5\" key=\"name\">\n                  Coming soon!\n                </Typography>\n              </div>\n            )}\n\n          </Card>\n        </div>)}\n    </React.Fragment>\n  );\n}\n\nexport default EventList;\n",
		"import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ClubInfo from \"../components/club/ClubInfo\";\nimport UserList from \"../components/user/UserList\";\nimport EventList from \"../components/event/EventList\";\nimport {\n  fetchClubDetails,\n  enrollMemberInClub,\n  removeMemberFromClub,\n} from \"../services/clubServices\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\nimport { AuthContext } from \"../components/auth/ProvideAuth\";\nimport { useHistory } from \"react-router\";\nimport MessageComponent from \"../components/MessageComponent\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    margin: \"10px 0 25px\",\n  },\n  enrollButton: { marginRight: \"5px\", backgroundColor: \"purple\" },\n  editButton: {\n    marginRight: \"5px\",\n    backgroundColor: \"darkorange\",\n    color: \"white\",\n    \"&:hover\": { color: \"black\", backgroundColor: \"orange\" },\n  },\n  orgEventButton: {\n    marginRight: \"5px\",\n    backgroundColor: \"darkgreen\",\n    color: \"white\",\n    \"&:hover\": { color: \"black\", backgroundColor: \"lightgreen\" },\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst ClubData = props => {\n  const contextValue = useContext(AuthContext);\n  const { user } = contextValue;\n  let { id } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [clubState, setClubState] = useState();\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const getClubDetails = async () => {\n      setLoading(true);\n      const response = await fetchClubDetails(id);\n      if (response.status === 200) {\n        setClubState(response.data.data);\n        setLoading(false);\n      } else if (response.message) {\n        window.alert(response.message);\n      } else if (response.status === 500) {\n        console.log(response.data.errors);\n        setMessage(\"Internal Server Error\");\n        setMessagePopupState(true);\n      }\n    };\n\n    getClubDetails();\n  }, [id]);\n\n  const enrollHandler = async () => {\n    const response = await enrollMemberInClub(user[\"_id\"], id);\n    if (response.status === 200) {\n      setClubState(response.data.data);\n      setMessage(\"Enrolled Successfully\");\n      setMessagePopupState(true);\n    } else if (response.status === 500) {\n      console.log(response.data.errors);\n      setMessage(\"Inernal Server Error\");\n      setMessagePopupState(true);\n    } else if (response.status === 412) {\n      console.log(response.data.message);\n      setMessage(response.data.message);\n      setMessagePopupState(true);\n    }\n  };\n\n  const leaveClubHandler = async () => {\n    const userObj = window.localStorage.getItem(\"user\");\n    const user = JSON.parse(userObj);\n    const response = await removeMemberFromClub(user[\"_id\"], id);\n    if (response.status === 200) {\n      setClubState(response.data.data);\n      setMessage(\"You have left the club\");\n      setMessagePopupState(true);\n    } else if (response.status === 500) {\n      console.log(response.data.errors);\n      setMessage(\"Inernal Server Error\");\n      setMessagePopupState(true);\n    }\n  };\n\n  const redirectToNewEventForm = () => {\n    history.push(`/event/new/${clubState[\"_id\"]}/new`);\n  };\n\n  const redirectToUpdateClubForm = () => {\n    history.push(`/club/form/${clubState[\"_id\"]}`);\n  };\n\n  const isUserAlreadyEnrolled = clubState?.members.includes(user[\"_id\"]);\n  const clubButtonObj = isUserAlreadyEnrolled\n    ? {\n        handler: leaveClubHandler,\n        startIcon: <RemoveCircleIcon />,\n        text: \"Leave\",\n      }\n    : {\n        handler: enrollHandler,\n        startIcon: <AddCircleOutlineIcon />,\n        text: \"Enroll\",\n      };\n  return (\n    <React.Fragment>\n      {messagePopupState && (\n        <MessageComponent\n          open={message}\n          messageContent={message}\n          setMessagePopupState={setMessagePopupState}\n        />\n      )}\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <>\n          <Grid container className={classes.root}>\n            <Grid item xs={12}>\n              <Grid\n                container\n                justifyContent=\"center\"\n                spacing={5}\n                alignItems=\"center\"\n              >\n                <Grid key=\"club-info\" item xs={12}>\n                  <ClubInfo club={clubState} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid container item className={classes.buttonGroup}>\n              {user.role === \"participant\" && (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.enrollButton}\n                  onClick={clubButtonObj.handler}\n                  startIcon={clubButtonObj.startIcon}\n                >\n                  {clubButtonObj.text}\n                </Button>\n              )}\n\n              {user.role === \"admin\" && (\n                <Button\n                  variant=\"contained\"\n                  startIcon={<EventIcon />}\n                  className={classes.orgEventButton}\n                  onClick={redirectToNewEventForm}\n                >\n                  Organize an Event\n                </Button>\n              )}\n              {user.role === \"admin\" && (\n                <Button\n                  variant=\"contained\"\n                  startIcon={<EditSharpIcon />}\n                  className={classes.editButton}\n                  onClick={redirectToUpdateClubForm}\n                >\n                  Edit Club\n                </Button>\n              )}\n            </Grid>\n\n            <Grid container item className={classes.root} spacing={3}>\n              <Grid item xs={6}>\n                <UserList ids={clubState.members} titleText=\"Registered Members\" emptyText=\"Enroll Now!\" />\n              </Grid>\n              <Grid item xs={6}>\n                <EventList xs={12} ids={clubState.events} club={clubState} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ClubData;\n",
		"import { getToken } from \"./authServices\";\nimport { GET_RESOURCE_URL } from './constants';\n\nexport const fetchResource = async id => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  }\n\n  const url = `${GET_RESOURCE_URL}/${id}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return ({\n    status: response.status,\n    data:resp\n  })\n}",
		"import React, { useEffect, useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { saveEvent, validateEventObject, fetchEventDetails } from '../services/eventServices';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchResource } from '../services/resourceServices'; \nimport { DB_URL } from '../services/constants';\nimport { CircularProgress } from '@material-ui/core';\nimport MessageComponent from '../components/MessageComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  root: {\n    minWidth: 275,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 120,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 250,\n  },\n  input: {\n    display: 'none',\n  },\n  image: {\n    width: '100%',\n    height: '300px',\n    margin: 'auto',\n    flexGrow: 1,\n  },\n}));\n\n\n\nconst EventForm = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  let { clubId, eventId } = useParams();\n\n  const [eventState, setEventState] = useState({\n    name: '',\n    desc: '',\n    capacity: 0,\n    participants: [],\n    to: null,\n    from: null,\n    eventPoster: null,\n    venue: '',\n    clubId,\n  });\n\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isUpdate, setIsUpdate ] = useState(false); \n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(()=>{\n    const getEventDetails = async id => {\n      setLoading(true);\n      const response = await fetchEventDetails(id);\n      if (response.status === 200) {\n        setEventState(response.data.data);\n        const { publicFiles } = response.data.data;\n        if (publicFiles.length > 0) {\n          const resourceResponse = await fetchResource(publicFiles[0]['_id']);\n          if (resourceResponse.status === 200) {\n            const { path } = resourceResponse.data.data;\n            setImage(`${DB_URL}/${path}`);\n          }\n          else if(resourceResponse.status === 500){\n            console.log(resourceResponse.errors);\n            setMessage('Failed to Load resource');\n            setMessagePopupState(true);\n          }\n        }\n        setLoading(false);\n      }\n      else if (response.status === 404) {\n        setMessage('Entity Not Found');\n        setMessagePopupState(true);\n      }\n      else if(response.status === 500){\n        console.log(response.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    };\n\n    if(eventId !== 'new' && eventId !== null && eventId !== undefined && eventId !== ''){\n      getEventDetails(eventId);\n      setIsUpdate(true);\n    }\n    else{\n      setLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [])\n\n\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setEventState({ ...eventState, [fieldName]: fieldValue });\n  }\n\n  const formChangeHandlerForImage = event => {\n    setImage(URL.createObjectURL(event.target.files[0]));\n    setEventState({ ...eventState, eventPoster: event.target.files[0] })\n  }\n\n  const formSubmitHandler = async event => {\n    const errors = validateEventObject(eventState);\n    if(errors.length ===0 ){\n      if(isUpdate){\n        setEventState({...eventState, '_id': eventId});\n      }\n      const response = await saveEvent(eventState);\n      console.log(response);\n      if (response.status === 201) {\n        setMessage(`Event ${isUpdate ? 'Updation': 'Creation'}`);\n        setMessagePopupState(true);\n        // window.alert('Event Creation Successfull');\n        redirectToClub();\n      }\n      else if(response.status === 404){\n        setMessage('Entity Not Found');\n        setMessagePopupState(true);\n      }\n      else if(response.status === 500){\n        console.log(response.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    }\n    else{\n      console.log(errors[0]);\n      setMessage(errors[0]);\n      setMessagePopupState(true);\n    }\n    \n  }\n  const redirectToClub = () => {\n    setTimeout(() => {\n      history.push(`/club/${clubId}`);\n    }, 500);\n  }\n\n\n  const clearImage = () => {\n    setImage(null);\n  }\n\n  const {name, desc, from, to, capacity, venue } = eventState;\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress/> : ( \n        <div>\n        {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n        {image && (<><img className={classes.image} src={image} alt=\"event\" /></>)}\n        <div className={classes.layout}>\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\"  color=\"primary\">\n              {`${isUpdate? 'Update': 'New'} Event`}\n            </Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={12} >\n                <TextField\n                  required\n                  value={name}\n                  id=\"name\"\n                  name=\"name\"\n                  label=\"Event Name\"\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  onChange={formChangeHandler}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  value={desc}\n                  id=\"desc\"\n                  name=\"desc\"\n                  label=\"Description\"\n                  fullWidth\n                  autoComplete=\"shipping address-line1\"\n                  onChange={formChangeHandler}\n\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  value={capacity}\n                  id=\"capacity\"\n                  name=\"capacity\"\n                  label=\"Capacity\"\n                  fullWidth\n                  autoComplete=\"shipping address-line2\"\n                  onChange={formChangeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  value={venue}\n                  id=\"venue\"\n                  name=\"venue\"\n                  label=\"Venue\"\n                  fullWidth\n                  autoComplete=\"shipping address-line1\"\n                  onChange={formChangeHandler}\n\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={isUpdate ? (from.split('.')[0]) : null}\n                  id=\"date\"\n                  label=\"Start Date\"\n                  name=\"from\"\n                  type=\"datetime-local\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={formChangeHandler}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={isUpdate ? (to.split('.')[0]): null}\n                  id=\"date\"\n                  label=\"End Date\"\n                  name=\"to\"\n                  type=\"datetime-local\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={formChangeHandler}\n                />\n              </Grid>\n\n              {!isUpdate && (<Grid item xs={12}>\n                <input\n                  className={classes.input}\n                  id=\"contained-button-file\"\n                  type=\"file\"\n                  accept=\".png, .jpg, .jpeg\"\n                  name=\"eventPoster\"\n                  onChange={formChangeHandlerForImage}\n                />\n                <label htmlFor=\"contained-button-file\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                  >\n                    Upload Event Poster\n                  </Button>\n                </label>\n              </Grid>)}\n              {image && !isUpdate && (\n                <React.Fragment>\n                  <Grid item xs={12}>\n                    <IconButton \n                      aria-label=\"delete\" \n                      className={classes.margin}\n                      onClick={clearImage}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Grid>\n                </React.Fragment>\n              )}\n            </Grid>\n          </CardContent>\n          <CardActions>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"contained\"\n                onClick={redirectToClub}\n              >\n                Back to Club\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={formSubmitHandler}\n              >\n                {isUpdate ?'Update': 'Create'}\n              </Button>\n            </Grid>\n          </CardActions>\n\n        </Card>\n        </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\n\nexport default EventForm;",
		"import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getEventStatus } from \"../../services/eventServices\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  chip_start: {\n    backgroundColor: \"green\",\n    marginBottom: \"10px\",\n  },\n  chip_end: {\n    backgroundColor: \"red\",\n    marginBottom: \"10px\",\n  },\n});\n\nconst EventInfo = props => {\n  const classes = useStyles();\n  const { event } = props;\n\n  const { name, desc, capacity, from, to } = event;\n  const status = getEventStatus(from, to);\n  var statusText = \"UPCOMING\",\n    statusClass = status === 2 ? classes.chip_end : classes.chip_start;\n\n  if (status === 1) statusText = \"ON-GOING\";\n  else if (status === 2) statusText = \"ENDED\";\n  const startDate = new Date(from);\n  const startDateString = `${startDate.getDate()}/${startDate.getMonth()}/${startDate.getFullYear()}   ${startDate.getHours()}:${startDate.getMinutes()}`;\n\n  const toDate = new Date(to);\n  const toDateString = `${toDate.getDate()}/${toDate.getMonth()}/${toDate.getFullYear()}   ${toDate.getHours()}:${toDate.getMinutes()} `;\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h4\" color=\"primary\" key=\"name\">\n            {name}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            color=\"secondary\"\n            key=\"desc\"\n            className={classes.pos}\n          >\n            {desc}\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            style={{ color: \"darkslategrey\" }}\n            key=\"memberCapacity\"\n          >\n            Capacity : {capacity}\n          </Typography>\n          <Typography variant=\"h6\" style={{ color: \"darkslategrey\" }}>\n            <i>\n              <b>{startDateString}</b>\n            </i>{\" \"}\n            to{\" \"}\n            <i>\n              <b>{toDateString}</b>\n            </i>\n          </Typography>\n          <Chip\n              color=\"secondary\"\n              size=\"small\"\n              label={statusText}\n              className={statusClass}\n            />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default EventInfo;\n",
		"import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { AuthContext } from '../auth/ProvideAuth';\nimport { getUserFeedbackForEvent, sendUserFeedback, validateFeedbackObject } from '../../services/eventServices';\nimport MessageComponent from '../MessageComponent';\nimport Typography from '@material-ui/core/Typography';\nimport {labels} from '../../services/constants';\n\nconst useStyles = makeStyles({\n  root: {\n    // width: 200,\n    display: 'flex',\n    alignItems: 'center',\n    height: 400,\n    padding: '10px',\n    // boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset',\n    border: 'solid',\n    borderColor: '#424242'\n  },\n  addHeight: {\n    height: 300\n  },\n  buttonStyling: {\n    padding: '10px'\n  },\n  ratingStyling: {\n    padding: '10px',\n    margin: 'auto',\n  },\n  textFieldStyling: {\n    width: '600px',\n    margin: 'auto',\n  },\n  questionFieldStyling: {\n    margin: 'auto',\n    color: '#009688',\n  },\n  ratingWidth: {\n    width: '220px'\n  }\n});\n\nconst RatingComponent = props => {\n  const contextValue = useContext(AuthContext);\n  const [hover, setHover] = useState(-1);\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  const [message, setMessage] = useState('');\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [isFeedbackGiven, setIsFeedbackGiven] = useState(false);\n  const { eventId } = props;\n  const { user } = contextValue;\n  const [feedbackState, setFeedbackState] = useState({\n    value: 2,\n    comments: ''\n  });\n\n  useEffect(() => {\n    const getUserFeedback = async () => {\n      setLoading(true);\n      const response = await getUserFeedbackForEvent(user['_id'], eventId);\n      if (response.status === 200 && response.data.success === true) {\n        const { stars, comments } = response.data.data;\n        setFeedbackState({\n          value: stars,\n          comments\n        });\n        setIsFeedbackGiven(true);\n        setLoading(false);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors[0]);\n        setMessagePopupState('Internal Server Error');\n        setMessagePopupState(true);\n      }\n      else if (response.status === 200 && response.data.success === false) {\n        setLoading(false);\n      }\n    }\n    getUserFeedback(); // eslint-disable-next-line\n  }, [])\n\n  const submitUserFeedback = async () => {\n    const feedback = {\n      eventId,\n      userId: user['_id'],\n      stars: value,\n      comments\n    };\n    const errors = validateFeedbackObject(feedback);\n    if (errors.length === 0) {\n      const response = await sendUserFeedback(feedback);\n      if (response.status === 201) {\n        const { stars, comments } = response.data.data;\n        setMessage('Feedback Submitted Successfully');\n        setMessagePopupState(true);\n        setFeedbackState({\n          value: stars,\n          comments\n        });\n        setIsFeedbackGiven(true);\n      }\n      else if (response.status === 409) {\n        setMessage('Your Feedback Already Exists');\n        setMessagePopupState(true);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    }\n    else{\n      console.log(errors);\n      setMessage(errors[0]);\n      setMessagePopupState(true);\n    }\n\n  }\n\n  const onCommentsFieldChange = event => {\n    setFeedbackState({ ...feedbackState, comments: event.target.value });\n  }\n\n  const { value, comments } = feedbackState;\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <>\n          {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState} />}\n          <Card className={classes.root}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <div className={classes.questionFieldStyling}>\n                  <Typography component=\"h4\" variant=\"h4\" key=\"name\">\n                    {isFeedbackGiven ? 'Thank you for sharing your experience' : 'How was you Experience ? '}\n                  </Typography>\n                </div>\n              </Grid>\n              <div className={classes.ratingStyling}>\n                <Grid item container xs={12}>\n                  <Grid item xs={6}>\n                    <div className={classes.ratingWidth}>\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={value}\n                        precision={0.5}\n                        onChange={(event, newValue) => {\n                          setFeedbackState({ ...feedbackState, value: newValue });\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        disabled={isFeedbackGiven}\n                      />\n                    </div>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography component=\"h6\" variant=\"h6\" key=\"name\">\n                      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n                    </Typography>\n\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Grid item xs={12}>\n                <div className={classes.textFieldStyling}>\n                  <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Additional Comments\"\n                    multiline\n                    rows={4}\n                    value={comments}\n                    variant=\"outlined\"\n                    name=\"comments\"\n                    onChange={onCommentsFieldChange}\n                    disabled={isFeedbackGiven}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} >\n                <div className={classes.buttonStyling}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submitUserFeedback}\n                    disabled={isFeedbackGiven}\n                  >\n                    Submit Feedback\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </>\n      )}\n\n    </React.Fragment>\n  );\n}\nexport default RatingComponent;",
		"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { labels } from '../../services/constants';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n    border: \"1px solid #ddd\",\n    margin: \"10px 5px\",\n    boxShadow: \"none\",\n  },\n  cardDetails: {\n    flex: 1,\n    display: \"flex\",\n    textAlign: \"left\",\n    justifyContent: \"flex-start\",\n  },\n  cardMedia: {\n    width: 250,\n  },\n  cardAction: {\n    \"&hover\": {\n      backgroundColor: \"transparent\",\n    }\n  },\n  ratingValue: {\n    margin: '18px',\n    color: '#795548'\n  },\n  width: {\n    width: '350px',\n  }\n});\n\nconst FeedbackCard = props => {\n  const classes = useStyles();\n  const { feedback } = props;\n  const { stars, comments } = feedback;\n  return (\n    <Grid item>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <div className={classes.ratingValue}>\n              <Typography component=\"h2\" variant=\"h5\" >\n                {labels[stars]}\n              </Typography>\n            </div>\n            <div className={classes.width}>\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Additional Comments\"\n                multiline\n                rows={4}\n                value={comments}\n                variant=\"outlined\"\n                name=\"comments\"\n                disabled={true}\n              />\n            </div>\n          </CardContent>\n        </div>\n        {/* <Hidden xsDown>\n            <CardMedia\n              className={classes.cardMedia}\n              image=\"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/zoom-background%2C-event%2Cpresentation-design-template-69f11bda0c4d7c9ccb155035a05493d9_screen.jpg?ts=1598358685\"\n              title={'Event Rating'}\n            />\n          </Hidden> */}\n      </Card>\n    </Grid>\n  );\n}\n\nexport default FeedbackCard;",
		"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport MessageComponent from \"../MessageComponent\";\nimport { getFeedbacksForEvent } from '../../services/eventServices';\nimport FeedbackCard from './FeedbackCard';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset'\n  },\n  root: {\n    margin: 'auto',\n  },\n  inline: {\n    display: 'inline',\n  },\n\n}));\n\n\nconst EventFeedbackList = props => {\n  const {eventId} = props;\n  const classes = useStyles();\n  const [feedbackList, setFeedbackList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n  \n\n  useEffect(()=>{\n    const getFeedbacks = async () => {\n      setLoading(true);\n      const response = await getFeedbacksForEvent(eventId);\n      if(response.status === 200){\n        setFeedbackList(response.data.data);\n        setLoading(false);\n      } \n      else if( response.status === 500){\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n        setLoading(false);\n      }\n    } \n    getFeedbacks(); // eslint-disable-next-line\n  },[])\n\n  return(\n    <div>\n    {loading ? (\n      <CircularProgress />\n    ) : (\n      <>\n      {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n      <div>\n      <Typography component=\"h2\" variant=\"h5\" >\n            Feedbacks\n        </Typography>\n        <Grid\n          key=\"outerGrid\"\n          className={classes.root}\n          container justify=\"center\"\n        >\n          {feedbackList.map((feedback) => {\n            return (\n              <Grid key={`innerGrid-${feedback['_id']}`} item xs={12} md={6}>\n                <div className={classes.grid_card}\n                  key={feedback['_id']}\n                >\n                    <FeedbackCard feedback={feedback}/>\n                </div>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n      </>\n    )}\n  </div>);\n};  \n\nexport default EventFeedbackList;",
		"import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventInfo from \"../components/event/EventInfo\";\nimport UserList from \"../components/user/UserList\";\nimport {\n  fetchEventDetails,\n  registerUser,\n  getEventStatus,\n} from \"../services/eventServices\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../components/auth/ProvideAuth\";\nimport { fetchResource } from \"../services/resourceServices\";\nimport { DB_URL } from \"../services/constants\";\nimport RatingComponent from \"../components/event/RatingComponent\";\nimport Card from \"@material-ui/core/Card\";\nimport MessageComponent from \"../components/MessageComponent\";\nimport EventFeedbackList from \"../components/event/EventFeedbackList\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  image: {\n    width: \"100%\",\n    height: \"300px\",\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n  enrollButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"purple\",\n  },\n  editButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"darkorange\",\n    color: \"white\",\n    \"&:hover\": { color: \"black\", backgroundColor: \"orange\" },\n  },\n  rateEventButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"darkred\",\n    color: \"white\",\n    \"&:hover\": { backgroundColor: \"red\" },\n  },\n  viewFeedbackButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"purple\",\n    color: \"white\",\n    \"&:hover\": { backgroundColor: \"indigo\" },\n  },\n  memberSection: {\n    width: \"50%\",\n  },\n}));\n\nconst EventData = props => {\n  const contextValue = useContext(AuthContext);\n  let { id } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [eventState, setEventState] = useState();\n  const [loading, setLoading] = useState(true);\n  const [imagePath, setImagePath] = useState();\n  const [eventStatusState, setEventStatusState] = useState();\n  const [ratingComponentState, setRatingComponentState] = useState(false);\n  const [feedbackComponentState, setFeedbackComponentState] = useState(false);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { user } = contextValue;\n\n  useEffect(() => {\n    getEventDetails();\n    // eslint-disable-next-line\n  }, [id]);\n\n  const registerUserToEvent = async () => {\n    const response = await registerUser(user[\"_id\"], eventState[\"_id\"]);\n    if (response.status === 200) {\n      setEventState(response.data.data);\n      setMessage(\"Registered in Event\");\n      setMessagePopupState(true);\n    } else if (response.status === 412) {\n      console.log(response.data.message);\n      setMessage(response.data.message);\n      setMessagePopupState(true);\n    } else if (response.status === 500) {\n      console.log(response.data.errors);\n      setMessage(\"Internal Server Error\");\n      setMessagePopupState(true);\n    }\n  };\n\n  const getEventDetails = async () => {\n    setLoading(true);\n    const response = await fetchEventDetails(id);\n    if (response.status === 200) {\n      setEventState(response.data.data);\n      setEventStatusState(\n        getEventStatus(response.data.data.from, response.data.data.to)\n      );\n      const { publicFiles } = response.data.data;\n      if (publicFiles.length > 0) {\n        const resourceResponse = await fetchResource(publicFiles[0][\"_id\"]);\n        if (resourceResponse.status === 200) {\n          const { path } = resourceResponse.data.data;\n          setImagePath(path);\n        } else if (resourceResponse.status === 500) {\n          console.log(resourceResponse.data.errors);\n          setMessage(\"Could not fetch File\");\n          setMessagePopupState(true);\n        }\n      }\n      setLoading(false);\n    } else if (response.message) {\n      setMessage(response.message);\n      setMessagePopupState(true);\n    } else {\n      console.log(response.errors);\n    }\n  };\n\n  const redirectToEventForm = () => {\n    history.push(`/event/new/${eventState.clubId}/${eventState[\"_id\"]}`);\n  };\n\n  const toggleRatingComponentState = () => {\n    setRatingComponentState(!ratingComponentState);\n  };\n\n  const toggleFeedbackComponentState = () => {\n    setFeedbackComponentState(!feedbackComponentState);\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <div>\n          {messagePopupState && (\n            <MessageComponent\n              open={messagePopupState}\n              messageContent={message}\n              setMessagePopupState={setMessagePopupState}\n            />\n          )}\n          {imagePath && (\n            <>\n              <img\n                className={classes.image}\n                src={`${DB_URL}/${imagePath}`}\n                alt=\"event\"\n              />\n              <br></br>\n              <br></br>\n            </>\n          )}\n          <Grid\n            container\n            justifyContent=\"center\"\n            spacing={5}\n            alignItems=\"center\"\n          >\n            <Grid key=\"club-info\" item xs={12}>\n              <EventInfo event={eventState} />\n            </Grid>\n          </Grid>\n          <Grid container item className={classes.buttonGroup}>\n            {!eventState.participants.includes(user[\"_id\"]) &&\n              user.role === \"participant\" &&\n              eventStatusState < 2 && (\n                <Button\n                  variant=\"contained\"\n                  className={classes.enrollButton}\n                  onClick={registerUserToEvent}\n                  startIcon={<AddCircleOutlineIcon />}\n                >\n                  Register\n                </Button>\n              )}\n            {user.role === \"admin\" && eventStatusState === -1 && (\n              <Button\n                variant=\"contained\"\n                className={classes.editButton}\n                onClick={redirectToEventForm}\n                startIcon={<EditSharpIcon />}\n              >\n                Edit\n              </Button>\n            )}\n            {user.role === \"participant\" && eventStatusState === 2 && (\n              <Button\n                variant=\"contained\"\n                className={classes.rateEventButton}\n                onClick={toggleRatingComponentState}\n                startIcon={<StarsIcon />}\n              >\n                Rate Event\n              </Button>\n            )}\n            {user.role === \"admin\" && eventStatusState === 2 && (\n              <Button\n                variant=\"contained\"\n                className={classes.viewFeedbackButton}\n                onClick={toggleFeedbackComponentState}\n                startIcon={<StarsIcon />}\n              >\n                View Feedbacks\n              </Button>\n            )}\n          </Grid>\n          {ratingComponentState && (\n            <>\n              <br></br>\n              <Card>\n                <Grid item container>\n                  <Grid item xs={12}>\n                    <RatingComponent eventId={eventState[\"_id\"]} />\n                  </Grid>\n                </Grid>\n              </Card>\n            </>\n          )}\n          <br></br>\n          <Grid\n            container\n            item\n            className={classes.memberSection}\n            justifyContent=\"start\"\n          >\n            <Grid item xs={12}>\n              <UserList ids={eventState.participants} titleText=\"Participants\" emptyText=\"Register Now!\" />\n            </Grid>\n          </Grid>\n\n          {feedbackComponentState && (\n            <>\n              <br></br>\n              <Card>\n                <Grid item container>\n                  <Grid item xs={12}>\n                    <EventFeedbackList eventId={eventState[\"_id\"]} />\n                  </Grid>\n                </Grid>\n              </Card>\n            </>\n          )}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default EventData;\n",
		"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport EventCard from './EventCard';\nimport { useHistory } from 'react-router-dom';\nimport { fetchEventList } from \"../../services/eventServices\";\nimport { Button, CircularProgress } from '@material-ui/core';\nimport MessageComponent from \"../MessageComponent\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    grid_card: {\n      padding: '10px'\n    }\n  }),\n);\n\nconst EventGrid = props => {\n  const styles = useStyles();\n  const { ids } = props;\n  const [eventList, setEventList] = useState(); //Array of user Objects\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const response = await fetchEventList(ids || []);\n      if (response.status === 200) {\n        setEventList(response.data.data);\n        setLoading(false);\n      }\n      else if(response.status === 500){\n        console.log('Error', response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    };\n    getData();\n  }, [ids]);\n\n  const redirectToEventData = id => {\n    history.push(`/event/${id}`)\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <>\n        {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n        <div>\n          <Grid\n            key=\"outerGrid\"\n            className={styles.root}\n            container justify=\"center\"\n          >\n            {eventList.map((event) => {\n              return (\n                <Grid key={`innerGrid-${event['_id']}`} item xs={12} md={6}>\n                  <div className={styles.grid_card}\n                    key={event.id}\n                  >\n                    <Button\n                      onClick={() => { redirectToEventData(event['_id']) }}\n                    >\n                      <EventCard event={event} onClick={() => { redirectToEventData(event['_id']) }} />\n                    </Button>\n\n                  </div>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n        </>\n      )}\n    </div>\n    \n  );\n}\n\nexport default EventGrid;\n\n\n\n\n\n",
		"import React, {useContext} from 'react';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport EventGrid from '../components/event/EventGrid';\n\nconst UserEvents = props => {\n  const contextValue = useContext(AuthContext);\n  const { user } = contextValue;\n  const { registeredEvents } = user;\n  return(\n    <React.Fragment>\n      {registeredEvents.length>0 ?\n        (<EventGrid  ids={registeredEvents}/>) : \n        (<h4>You have no registered events!</h4>)\n      }\n         \n    </React.Fragment>\n  );\n}\n\nexport default UserEvents;",
		"import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignUp from './pages/SignUp';\nimport Dashboard from './pages/Dashboard';\nimport SignIn from './pages/SignIn';\nimport ProvideAuth from './components/auth/ProvideAuth';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport ClubGrid from './pages/ClubGrid';\nimport ClubForm from './pages/ClubForm';\nimport ClubData from './pages/ClubData';\nimport EventForm from './pages/EventForm';\nimport EventData from './pages/EventData';\nimport UserEvents from './pages/UserEvents';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<ProvideAuth>\n\t\t\t\t<Router basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' exact component={SignUp}></Route>\n\t\t\t\t\t\t<Route path='/signup' exact component={SignUp}></Route>\n\t\t\t\t\t\t<Route path='/signin' exact component={SignIn}></Route>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath='/clubs'\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\t\t\t\treturn <ClubGrid />;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath='/club/form/:id'\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\t\t\t\treturn <ClubForm />;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath='/club/:id'\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\t\t\t\treturn <ClubData />;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath='/event/new/:clubId/:eventId'\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\t\t\t\treturn <EventForm />;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath='/event/:id'\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\t\t\t\treturn <EventData />;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath='/user/events'\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\t\t\tcomponent={() => {\n\t\t\t\t\t\t\t\t\t\t\treturn <UserEvents />;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></PrivateRoute>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</ProvideAuth>\n\t\t</div>\n\t);\n}\n\nexport default App;\n",
		"const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
		"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
	],
	"sourceRoot": ""
}
